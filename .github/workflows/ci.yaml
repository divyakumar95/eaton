name: CI

on:
  push:
    branches:
      - master

jobs:
  lint_and_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", 3.11, 3.12]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .
          pip install pytest
          pip install ruff
          pip install pytest

      - name: Analysing the code with pylint
        run: |
          pylint $(git ls-files '*.py') --disable=R,C --max-line-length=120 || true

      - name: Linting the code with ruff
        run: |
          ruff check .

      - name: Test with pytest
        run: |
          python -m pytest test

  build_image:
    runs-on: ubuntu-latest
    needs: lint_and_test # This job depends on the linting and testing job
    outputs:
      image_tag: ${{ steps.vars.outputs.image_tag }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get image tag
        id: vars
        run: |
          # Use grep to extract the version from pyproject.toml
          VERSION=$(grep -oP 'version = "\K[^"]+' ./pyproject.toml)
          # Make the version available as a job output and an environment variable
          echo "image_tag=$VERSION" >> $GITHUB_OUTPUT
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build the Docker image
        run: |
          docker build . --file Dockerfile --tag eaton:${{ env.VERSION }}
          echo "Docker image eaton:${{ env.VERSION }} built successfully"

  scan_image:
    runs-on: ubuntu-latest
    needs: build_image # This job depends on the successful completion of the build job

    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: eaton:${{ needs.build_image.outputs.image_tag }}
          format: "table"
          exit-code: "0"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"
